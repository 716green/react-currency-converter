{"ast":null,"code":"var _jsxFileName = \"/home/bob/Documents/Programming/React/react-currency-converter/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest';\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exhangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  console.log(exchangeRate);\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Convert\"), React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectedCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"equals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"=\"), React.createElement(CurrencyRow, {\n    currencyOptions: currencyOptions,\n    selectedCurrency: toCurrency,\n    onChangeCurrency: e => setToCurrency(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bob/Documents/Programming/React/react-currency-converter/src/App.js"],"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exhangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","console","log","exchangeRate","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,QAAQ,GAAG,wCAAjB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;AACA,QAAM,CAACU,WAAD,EAAcC,eAAd,IAAiCX,QAAQ,EAA/C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,IAAD,CAAhE;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,KAAK,CAACjB,QAAD,CAAL,CACCkB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,YAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAAtB;AACAtB,MAAAA,kBAAkB,CAAC,CAACkB,IAAI,CAACK,IAAN,EAAY,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAf,CAAD,CAAlB;AACApB,MAAAA,eAAe,CAACgB,IAAI,CAACK,IAAN,CAAf;AACAnB,MAAAA,aAAa,CAACe,aAAD,CAAb;AACAb,MAAAA,eAAe,CAACY,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,WAAD;AACE,IAAA,eAAe,EAAEpB,eADnB;AAEE,IAAA,gBAAgB,EAAEE,YAFpB;AAGE,IAAA,gBAAgB,EAAEuB,CAAC,IAAItB,eAAe,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAOA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPA,EAQA,oBAAC,WAAD;AACE,IAAA,eAAe,EAAE3B,eADnB;AAEE,IAAA,gBAAgB,EAAEI,UAFpB;AAGE,IAAA,gBAAgB,EAAEqB,CAAC,IAAIpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADF;AAgBD;;AAED,eAAe5B,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exhangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n  console.log(exchangeRate)\n\n  useEffect(() => {\n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then(data => {\n      const firstCurrency = Object.keys(data.rates)[0]\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n  }, [])\n\n  return (\n    <>\n    <h1>Convert</h1>\n    <CurrencyRow\n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChangeCurrency={e => setFromCurrency(e.target.value)}\n    />\n    <div className=\"equals\">=</div>\n    <CurrencyRow \n      currencyOptions={currencyOptions}\n      selectedCurrency={toCurrency}\n      onChangeCurrency={e => setToCurrency(e.target.value)}\n    />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}